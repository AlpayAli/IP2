stages:
  - build
  - test
  - deploy

# Build Stage
build_backend:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
  script:
    - apk add --no-cache openjdk17 gradle bash
    - chmod +x gradlew
    - echo "Building application with Gradle..."
    - ./gradlew build -x test
    - echo "Copying JAR file for Docker image..."
    - cp $(ls build/libs/BackendGameService-0.0.1-SNAPSHOT.jar | head -n 1) ./app.jar
  artifacts:
    paths:
      - app.jar  # Pass the JAR file to the next stage
  only:
    - main

# Test Stage
test_backend:
  stage: test
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""  # Disable TLS
    SPRING_PROFILES_ACTIVE: test
    TESTCONTAINERS_RYUK_DISABLED: "true"  # Avoid network issues with Ryuk
  before_script:
    - apk add --no-cache bash openjdk17
  script:
    - chmod +x gradlew
    - echo "Running tests with Gradle..."
    - ./gradlew test
  only:
    - main
  needs:
    - build_backend # Ensure the tests run after the build stage

# Deploy Stage (Push Docker Image)
deploy_backend:
  stage: deploy
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "Listing files in the current directory..."
    - ls -lh
    - echo "Building Docker image..."
    - docker build -t "$CI_REGISTRY_IMAGE/spring-backend:latest" .
    - echo "Pushing Docker image..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker push "$CI_REGISTRY_IMAGE/spring-backend:latest"
  needs:
    - build_backend # Ensure deployment happens only after build
    - test_backend  # Ensure deployment happens only after tests
  dependencies:
    - build_backend  # Pull the artifact (app.jar) from build_backend stage
  only:
    - main
